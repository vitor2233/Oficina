<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH5AUGAAIp3A7ZdgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAABtSURBVDhP
        YwCCK0CcDGKQCEB6QHrBjD9QmliAoScJiEECmWAefoBTLTGGEFSDTwHRrsSmkGjNMICsgWTNMAALaRAm
        JYbggCIDKPICNg1EG4JPIUFDiLEFpxqinQgEGGphoU1KSKPooSA7M1wGADgiNOwMwuQdAAAAAElFTkSu
        QmCC
</value>
  </data>
  <metadata name="bunifuElipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAkAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjsDtkaXJ
        6v6kyev/pMnr/6TJ6/+kyev/pMnr/6TJ6/+kyev/pMnr/6TJ6/+kyev/pMnr/6TJ6/+ry+n/4+Xn8+bm
        5jMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzlvFtc7b2/Xe49v93uPb/c7b1/2av9P93uPb/d7j2/3e4
        9v93uPb/d7j2/3e49v92uPb/Yqzz/3e49v95ufb/c7Pu/+nm5mYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAVhvKFDYLv/w2C7/8Nge//CWjP/wZWuP8Meub/DYLv/w2C7/8Ngu//DYLv/w2C7/8Kcdn/A0Oh/wtz
        3P8Ngu//WaXt/+nm5mYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOge+CDYLv/w2C7/8Le+X/BEuo/wZX
        uf8FVbf/DHrm/w2C7/8Ngu//DYLv/wpx2f8BN5H/Aj2Y/wt03/8Ngu//V6Tt/+nm5mYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAOge+CDYLv/w2C7/8Ngu//C3Lb/wVRsv8HWLr/Blu//w2B7f8Ngu//C3Lb/wE3
        kf8CPJj/CnTd/w2C7/8Ngu//V6Tt/+nm5mYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOge+CDYLv/w2C
        7/8Ngu//DYLv/wty2v8FTqz/ADGI/wdewv8Kcdr/ATeR/wI9mP8KdN7/DYLv/w2C7/8Ngu//V6Tt/+nm
        5mYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOge+CDYLv/w2C7/8Ngu//DYLv/w2C7/8Me+T/BEim/wRI
        pv8GVrj/Aj2Y/wp03v8Ngu//DYLv/w2C7/8Ngu//Zavs/+nm5mYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAOge+CDYLv/w2C7/8Ngu7/DYLv/w2C7/8Ngu//C3Te/wlmzP8HXsH/C3Td/w2C7/8Ngu//DYLv/w2C
        7/8Ngu//YKjs/+nm5mYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOge+CDYLv/wp03v8HXb//DYDs/w2C
        7/8Mfev/B1q8/wlt1f8Lctz/CWjP/wx+6/8Ngu//DYLv/w2C7/8Ngu//Yqns/+nm5mYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAOge+CDHvl/wI+mv8IYMT/Cm/Y/wx96P8HWLr/B2HF/w2A7P8Ngu//C3fi/wlp
        z/8Mfuv/DYLv/w2C7/8Ngu//Y6ns/+nm5mYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOge+CDYDs/wty
        3P8IZMn/BEaj/wZVtv8JZsz/DYDs/w2C7/8Ngu//DYLv/wt34v8Jac//DH3r/w2C7/8Ngu//V6Tt/+nm
        5mYAAAAAAAAAAAAAAAAAAAAAAAAAAK/M6ZVtr+v0DYLv/w2C7/8Kc9v/ADKK/wAwiP8KbdT/DYLv/w2C
        7/8Ngu//DYLv/w2C7/8LdeD/Blu9/wpu1f8Ngu//V6Tt/8XW6ODl5ufh6OjlTQAAAAAAAAAAC2fNigtM
        pv8kcMj/GYPo/w2C7/8Ld+H/CW7X/wZXuf8FUrT/CGPH/wt65f8Ngu7/DHzn/w2C7/8Ngu//CGTJ/whk
        yv8Qg+3/KnzT/whIpP9IitL/6ObmugAAAAAAAAAAB1vAtgAwiP8AMIj/F1at/yOD4v8Ngu//DYHv/wls
        0v8BOpP/ADCI/wE3kf8HX8L/Cm/X/w2B7/8Ngu//DYLv/xeC6f8hacD/ADGI/wAwiP8kaL3/5+fnXwAA
        AAAAAAAAC3HaRAZTs9sAMIj/ADCI/wpDm/8pgdr/DYLv/w2C7/8Ne+b/C3Lb/wt44f8Nge//DYLv/w2C
        7/8Ngu//HoHh/xdXr/8AMIj/ADCI/xRRp/5Gi9ahAAAAAAAAAAAAAAAAAAAAAAd14iMIXsPIADOL/wAw
        iP8CNY3/J3jR/w+C7v8Ngu//DYLv/w2C7/8Ngu//DYLv/w2C7/8mgNz/DUae/wAwiP8AMIj/HmG2+kGL
        2XIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXi+gLCWnNrwM6lPsAMIj/ADGI/yNrwf8Wgur/DYLv/w2C
        7/8Ngu//DoHv/yZ71P8DOZL/ADCI/wAyi/8ocsfyPJHhPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAP//AQpp0YUEQ6DvADCI/wAwiP8ZWrH/IYLi/w2C7/8Vguv/I2/I/wAyiv8AMIj/BDiR/zR9
        0OJDofITAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALbdZeBk+v4QAw
        iP8AMIj/D0mh/yV/2f8bXrT/ADCI/wAwiP8QS6L/PYXVuAD//wEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3DaMAddwNEAMor/ADCI/wAwiP8AMIj/ADCI/xpb
        sPw/idWGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABF37g8IZMm1ATeR/QAwiP8AMYn/JWzB9UGP3UsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqv8DCWjPlQlZ
        uuIbb8zILIXpFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8A8AAHAOAABwDgAAcA4AAHAOAABwDgAAcA4AAHAOAA
        BwDgAAcA4AAHAOAABwDAAAEAgAABAIAAAQCAAAMAwAAHAOAADwDwAB8A/AA/AP4A/wD/Af8A/4P/AP//
        /wA=
</value>
  </data>
</root>